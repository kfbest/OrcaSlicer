name: Build all

on:
  push:
    branches:
     - main
     - release/*
    paths:
     - 'deps/**'
     - 'src/**'
     - '**/CMakeLists.txt'
     - 'version.inc'
     - 'localization/**'
     - 'resources/**'
     - ".github/workflows/build_*.yml"
     - 'flatpak/**'

  pull_request:
    branches:
     - main
     - release/*
    paths:
     - 'deps/**'
     - 'src/**'
     - '**/CMakeLists.txt'
     - 'version.inc'
     - ".github/workflows/build_*.yml"
     - 'BuildLinux.sh'
     - 'build_release_vs2022.bat'
     - 'build_release_macos.sh'
     - 'flatpak/**'

  workflow_dispatch: # allows for manual dispatch
    inputs:
      build-deps-only:
        description: 'Only build dependencies (bypasses caching)'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  

jobs:
  build_all:
    name: Build All
    strategy:
      fail-fast: false
      matrix:
        include:
          # Deprecate 20.04appimage
          # - os: ubuntu-20.04
          # - os: ubuntu-24.04
          # - os: windows-latest
          - os: macos-14
            arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install dependencies
        run: |
          brew update
          brew install boost tbb

      - name: Cache build directory
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('src/**', 'CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --parallel $(sysctl -n hw.ncpu || nproc)

